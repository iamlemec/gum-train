{"prompt": "Letters stacked like blocks spelling out the word \"gum\".", "code": "let [g, u, m] = 'GUM'.split('').map(t =>\n  Node(t, {aspect: 1, fill: '#EEE', border: 5})\n);\nlet s = VStack([g, HStack([u, m])], {expand: false});\nreturn Frame(s, {margin: 0.02});"}
{"prompt": "A 25 pixel icon in which an arrow is pointing downward into a curved tray.", "code": "let [mid, rad] = [0.25, 0.06];\nlet [apt, asz] = [0.17, 0.25];\nlet vline = VLine(0.5, {lim: [0, 1-apt]});\nlet arrow = Polyline([\n  [0.5-asz, 1-apt-asz], [0.5, 1-apt], [0.5+asz, 1-apt-asz]\n]);\nlet base = Bezier2Path([0, 1-mid], [\n  [0, 1-rad], [[rad, 1], [0, 1]], [1-rad, 1], [[1, 1-rad], [1, 1]], [1, 1-mid]\n]);\nlet shape = Group([vline, base, arrow]);\nlet frame = Frame(shape, {margin: 0.1});\nreturn SVG(frame, {size: 25, prec: 2});"}
{"prompt": "A 20 by 25 pixel icon of two rectangles shaped like pieces of paper partially overlaid on one another.", "code": "let x = 0.35;\nlet s = Scatter(\n  [[x, x], [1-x, 1-x]],\n  {shape: Rect(), size: x}\n);\nlet f = Frame(s, {margin: 0.05});\nreturn SVG(f, {size: [20, 25]});"}
{"prompt": "An array of partially overlapping squares depicting the letter \"X\". The squares for one direction are in red, while the squares in the other direction are in blue.", "code": "let n = 16;\nlet r = Rect();\nlet p1 = Scatter(\n    linspace(0, 1, n).map(x => [x, x]),\n    {shape: r, size: 0.1, stroke: 'red'}\n);\nlet p2 = Scatter(\n    linspace(0, 1, n).map(x => [1 - x, x]),\n    {shape: r, size: 0.1, stroke: 'blue'}\n);\nlet gg = Group([p1, p2], {opacity: 0.75});\nreturn Frame(gg, {margin: 0.15});"}
{"prompt": "A square grid of four cells, where each cell contains a starburst pattern with 12 lines radiating outwards from a central point.", "code": "let n = 12;\nlet r = Rect();\nlet s = Group(range(-90, 90, 180/n).map(t => Ray(t)));\nlet hs = HStack([s, s]);\nlet vs = VStack([hs, hs]);\nlet gg = Group([vs, r]);\nreturn Frame(gg, {border: 1, margin: 0.05});"}
{"prompt": "The word \"best\"", "code": "return Text('best');"}
{"prompt": "A rectangular box containing the word \"hello\"", "code": "return Node('hello', {padding: 0.1, margin: 0.1, border: 1});"}
{"prompt": "Two side-by-side rectangles, the left one containing a mushroom emoji, the right one containing the world \"hello\".", "code": "let boxes = ['\ud83c\udf44', 'planet'].map(x => Node(x, {padding: 0.15, border: 1}));\nlet t = HStack(boxes, {expand: true});\nreturn Frame(t, {padding: 0.05});"}
{"prompt": "Three boxes containing the letter \"A\", with two boxes stacked vertically on the left side and one box on the right side.", "code": "let a = Node('A');\nlet n1 = VStack([a, a]);\nlet n2 = HStack([n1, a]);\nreturn Frame(n2, {margin: 0.1});"}
{"prompt": "A plot of a curve spiraling inwards counterclockwise, with axes in both directions ranging from -1 to 1.", "code": "let s = SymPath({\n  fx: t => exp(-0.1*t)*cos(t),\n  fy: t => exp(-0.1*t)*sin(t),\n  tlim: [0, 100], N: 1000,\n});\nlet p = Plot(s, {xlim: [-1, 1], ylim: [-1, 1]});\nreturn Frame(p, {margin: 0.1});"}
{"prompt": "A plot of three different increasing curves of varying steepness and multiple points scattered at regular intervals. The x-axis label is \"time (seconds)\", the y-axis label is \"space (meters)\", and the title is \"Spacetime Vibes\". There are axis ticks in both directions with assiated faint grid lines.", "code": "let s = [0.5, 0.7, 1.0, 1.4].map(a =>\n  SymPath({fy: x => sin(a*x), xlim: [-1, 1]})\n);\nlet t = Scatter(\n  [[0, 0.5], [0.5, 0], [-0.5, 0], [0, -0.5]], {radius: 0.015}\n);\nlet r = Scatter(\n  [[Rect(), [0.5, 0.5]], [Circle(), [-0.5, -0.5]]], {radius: 0.1}\n);\nlet p = Plot([...s, r, t], {\n  xlim: [-1, 1], ylim: [-1, 1], ygrid: true, xgrid: true,\n  xlabel: 'time (seconds)', ylabel: 'space (meters)', title: 'Spacetime Vibes'\n});\nreturn Frame(p, {margin: 0.3});"}
{"prompt": "Scatter plot showing three points, each one marked with an \"x\" and the label \"hello\". The x-axis ranges from -1 to 1, while the y-axis ranges from 0 to 1.", "code": "let r0 = Rect({stroke: 'red', opacity: 0.5});\nlet ex = Frame(Group([Ray(45), Ray(-45)]), {margin: 0.3});\nlet hi = Text('hello');\nlet exhi = HStack([ex, hi], {spacing: 0.05});\nlet s0 = Scatter(\n  [[-0.3, 0.3], [0.4, 0.6], [-0.5, 0.8]], {shape: exhi, size: 0.1}\n);\nlet p = Plot(s0, {xlim: [-1, 1], ylim: [0, 1]});\nlet f = Frame(p, {margin: 0.15});\nreturn f;"}
{"prompt": "Bar plot with 5 bars whose labels range from \"A\" to \"E\" and whose heights have values between 0 and 10.", "code": "let b = BarPlot(\n  [['A', 5], ['B', 8], ['C', 10], ['D', 6], ['E', 3]], {bar_fill: '#DDD'},\n);\nreturn Frame(b, {margin: [0.15, 0.1]});"}
{"prompt": "Bar plot with 3 bars whose labels are \"A\", \"B\", and \"C\" and whose heights are values between 0 and 10. The center bar has multiple segments, each with a different color.", "code": "let vb = VMultiBar([[3, 'yellow'], [5, 'lightblue'], [2, 'lightgreen']]);\nlet b = BarPlot([['A', 5], ['B', vb], ['C', 6]], {bar_fill: '#DDD'});\nreturn Frame(b, {margin: [0.15, 0.1]});"}
{"prompt": "A plot of two lines that are zero at 0 and 2 but are positive inbetween. One of the lines is solid blue while the other line is dashed red. The plot has a legend in the top right naming the blue line \"Hello World\" and the red line \"Testing Longer String\".", "code": "let args1 = {stroke: blue};\nlet args2 = {stroke: red, stroke_dasharray: 6};\nlet info = [[args1, 'Hello World'], [args2, 'Testing Longer String']];\nlet leg = Legend(info, {pos: [1.5, 1.8], rad: 0.45, vspacing: 0.3});\nlet line1 = SymPath({fy: x => 1.5*x*(2-x), xlim: [0, 2], ...args1});\nlet line2 = SymPath({fy: x => x*(2-x), xlim: [0, 2], ...args2});\nlet plot = Plot([line1, line2, leg], {aspect: phi, ylim: [0, 2]});\nlet frame = Frame(plot, {margin: 0.15});\nreturn frame;"}
{"prompt": "A bar plot in the style of the Economist magazine. There are roughly 40 densely packed blue bars with random heights between 0 and 70. The y-axis has horizontal grid lines at 0, 25, 50, and 75, while the x-axis ranges between 0 and 40.", "code": "let n = 41; let ymax = 70; let yticks = linspace(0, 100, 5);\nlet vals = range(n).map(x => ymax*random(x));\nlet bars = VBars(vals, {integer: true, bar_fill: '#1e5c99', bar_stroke: 'none'});\nlet labs = Scatter(\n  yticks.map(x => [Anchor(Text(x)), [n+3, x+4]]), {size: 1}\n);\nlet plot = Plot([bars, labs], {\n  aspect: phi, xlim: [-1, n+4], ylim: [0, ymax+5], xticks: range(0, n+10, 10), yticks: 4,\n  xaxis_tick_pos: 'down', yaxis: false, ygrid: yticks\n});\nlet frame = Frame(plot, {margin: 0.15});\nreturn frame;"}
{"prompt": "A horizontal grid of boxes, each containing an integer. On top of each box is a label indicating which word it is associated with, such as \"quick\" or \"fox\". Near the end of the grid, there is an ellipsis box indicating there are many omitted words inbetween.", "code": "let data = [\n  ['the', '2'], ['quick', '1'], ['brown', '2'], ['fox', '1'],\n  ['jumped', '1'], ['over', '1'], ['dog', '1'], ['lazy', '0'],\n  ['plum', '0'], ['house', '0']\n];\nlet cells = data.map(([w, c]) => VStack([\n  Place(Text(w), {rad: [0, 0.15], expand: true, aspect: 1}),\n  Node(Text(c), {padding: 0.4, aspect: 1})\n]));\nlet circ = HStack(repeat(Dot(), 3), {spacing: 1});\nlet dots = Place(circ, {rad: [0.2, 0], expand: true, aspect: 1});\ncells.splice(8, 0, VStack([1/2, dots]));\nreturn Frame(HStack(cells), {margin: [0.05, 0, 0.05, 0.05]});"}
{"prompt": "Plot of three lines, one in red which is max(0,x), another in blue which is the same but with a slight dip at 0, and a final dashed horizontal line at 0. There is a legend labeling these lines as \"ReLU\" for the red line and \"GELU\" for the blue line. The x-axis ranges from -4 to 3, making sure there is a tick at 0.", "code": "let sigmoid = x => 1/(1+exp(-2*x));\nlet xlim = [-4, 3]; let ylim = [-1, 3];\nlet rargs = {stroke: red, stroke_width: 2};\nlet bargs = {stroke: blue, stroke_width: 2};\nlet relu = SymPath({fy: x => max(0, x), xlim, ...rargs});\nlet gelu = SymPath({fy: x => x*sigmoid(x), xlim, ...bargs});\nlet zero = HLine(0, {lim: xlim, stroke_dasharray: 4});\nlet leg = Legend([[rargs, 'ReLU'], [bargs, 'GELU']], {\n    pos: [-2, 2], rad: 0.55, hspacing: 0.1, vspacing: 0.2\n});\nlet plot = Plot([zero, relu, gelu, leg], {aspect: phi, ylim, xticks: 8});\nreturn Frame(plot, {margin: 0.1});"}
{"prompt": "A flow diagram with three nodes arranged horizontally: \"Input\", \"Causal Self Attention\", and \"Perceptron\". There are unidirectional arrows going from left to right, connecting the first and second nodes and the second and third nodes, each with the label \"Layer Norm\". Each node is a rectangle with slightly rounded corners.", "code": "let net = Network([\n  ['input', 'Input', [0.15, 0.5], [0.1, 0.2]],\n  ['attn', ['Causal Self', 'Attention'], [0.5, 0.5], [0.1, 0.4]],\n  ['percep', 'Perceptron', [0.85, 0.5], [0.1, 0.2]],\n], [\n  ['input', 'attn'], ['attn', 'percep']\n], {\n  aspect: 8, directed: true, node_border_radius: 0.05, arrow_size: [0.04, 0.03]\n});\nlet notes = Scatter([[0.32, 0.4], [0.67, 0.4]], {\n    shape: Text('Layer Norm'), size: 0.08\n});\nreturn Group([net, notes]);"}
{"prompt": "Wide-form plot depicting various curves traversing in the vertical dimension from 0 to 1. Some of the curves span the whole distance, others loop back to the origin, while others form independent loops. The x-axis is labeled \"Solutions (x)\" and the y-axis is labeled \"Deformation path (t)\".", "code": "let path1 = SymPath({fy: x => 6*(x-0.1)*(1.2-3*x), xlim: [0.1, 0.4]});\nlet path2 = SymPath({fx: y => 0.6 + 0.25*cos(3*y), ylim: [0, 1]});\nlet ellipse1 = Ellipse({pos: [0.5, 0.3], rad: [0.05, 0.1]});\nlet ellipse2 = Ellipse({pos: [0.8, 0.7], rad: [0.05, 0.15]});\nlet line1 = HLine(1); let line2 = VLine(1);\nlet plot = Plot([path1, path2, ellipse1, ellipse2, line1, line2], {\n    aspect: 2, xlim: [0, 1], ylim: [0, 1], xticks: [], yticks: [0, 1],\n    xlabel: 'Solutions (x)', ylabel: 'Deformation Path (t)', label_offset: 0.05,\n});\nlet frame = Frame(plot, {margin: 0.15});\nreturn frame;"}
{"prompt": "Draw a plot of a function increases from below zero to a maximum value of nbar. Indicate with vertical and horizontal lines where this line cross zero and a positive threshhold gz/alpha. Label these intersection points on the axis, along with nbar and zero. Let the x-axis label be \"Standard of Living (y)\", the y-axis label be \"Population Growth (gL)\", and the title be \"Modified Demographic Function\".", "code": "let nbar = 2; let ybar = 1; let theta = 1; let gz = 0.5; let alpha = 0.5;\nlet gza = gz/alpha; let ystar = ybar + gza/theta;\nlet xlim = [xlo, xhi] = [0, 5]; let ylim = [ylo, yhi] = [-2, 3];\nlet demo = y => min(nbar, theta*(y-ybar));\nlet path = SymPath({fy: demo, xlim});\nlet zero1 = HLine(0, {lim: xlim, opacity: 0.2});\nlet zero2 = VLine(ybar, {lim: ylim, opacity: 0.2});\nlet line1 = HLine(gza, {lim: xlim, stroke_dasharray: 3});\nlet line2 = VLine(ystar, {lim: ylim, stroke_dasharray: 3});\nlet dot = Scatter([[ystar, gza]], {size: 0.04});\nlet xticks = [[1, Tex('\\\\bar{y}')], [ystar, Tex('y^{\\\\ast}')], [xhi, '']];\nlet yticks = [[0, '0'], [gz/alpha, Tex('\\\\frac{g_z}{\\\\alpha}')], [nbar, Tex('\\\\bar{n}')], [yhi, '']];\nlet plot = Plot([path, zero1, zero2, line1, line2, dot], {\n  aspect: phi, xlim, ylim, xticks, yticks, xlabel: 'Standard of living (y)',\n  ylabel: 'Population growth (gL)', title: 'Modified Demographic Function'\n});\nlet frame = Frame(plot, {margin: 0.25});\nreturn frame;"}
{"prompt": "Plot of the path of a line that starts at a high level y0*, then at time t0 begins to decay exponentially down to a lower level y1*. The x-axis has a label for time t0, and the y-axis has labels for y0* and y1*. Each of these are also denoted with dashed lines in the plot. The x-axis label is \"Time (t)\" and the y-axis label is \"Output (y)\".", "code": "let [t0, ymax, yss0, yss1] = [0.2, 1.4, 1.0, 0.7];\nlet path0 = HLine(1, {x1: 0, x2: t0, stroke_width: 2});\nlet path1 = SymPath({\n    fy: x => min(yss0, yss1 + (yss0-yss1)*exp(-6*(x-t0))),\n    xlim: [0, 1], stroke_width: 2\n});\nlet start = VLine(t0, {lim: [0, ymax], stroke_dasharray: [4, 4]});\nlet steady1 = HLine(1, {lim: [0, 1], stroke_dasharray: [4, 4]});\nlet steady2 = HLine(yss1, {lim: [0, 1], stroke_dasharray: [4, 4]});\nlet plot = Plot([path0, path1, start, steady1, steady2], {\n    xlim: [0, 1], ylim: [0, ymax], aspect: phi,\n    xlabel: 'Time (t)', ylabel: 'Output (y)',\n    ticksize: 0.06, xticks: [[t0, Tex('t_0')]],\n    yticks: [[yss1, Tex('y^{\\\\ast}_1')], [1, Tex('y^{\\\\ast}_0')]]\n});\nlet frame = Frame(plot, {padding: [0.25, 0, 0, 0.25]});\nreturn frame;"}
{"prompt": "Plot of two lines that both originate at zero and intersect at a single point, one that is convext and one that is concave. The intersection point is labeled as k1* and k2*, both on the axes and with grid lines. The x-axis label is \"Capital Stock 1 (k1)\" and the y-axis label is \"Capital Stock 2 (k2)\".", "code": "let klim = [0.0, 1.5]; let [a, b] = [1.0, 0.5];\nlet kzero1 = k1 => a*k1**b; let kzero2 = k2 => a*k2**b;\nlet kstar = a**(1/(1-b));\nlet path1 = SymPath({fy: kzero1, xlim: klim});\nlet path2 = SymPath({fx: kzero2, ylim: klim});\nlet note1 = Note('\\\\dot{k}_1=0', {pos: [1.62, 1.24], rad: 0.09, latex: true});\nlet note2 = Note('\\\\dot{k}_2=0', {pos: [1.21, 1.6], rad: 0.09, latex: true});\nlet plot = Plot([path1, path2, note1, note2], {\n  aspect: phi, xlim: klim, ylim: klim,\n  xaxis_pos: 0, xaxis_tick_pos: 'both', xticks: [[kstar, Tex('k_1^{\\\\ast}')]], yticks: [[kstar, Tex('k_2^{\\\\ast}')]],\n  xlabel: HStack([Text('Capital Stock 1 '), Tex('(k_1)')]), xlabel_offset: 0.15, xgrid: true,\n  ylabel: HStack([Text('Capital Stock 2 '), Tex('(k_2)')]), ylabel_offset: 0.1, ygrid: true,\n});\nlet frame = Frame(plot, {margin: [0.2, 0.1, 0.2, 0.2]});\nreturn frame;"}
{"prompt": "A square in the top left and a circle in the bottom right.", "code": "return Group([\n  [Square(), {pos: [0.3, 0.3], rad: 0.15}],\n  [Circle(), {pos: [0.7, 0.7], rad: 0.15}]\n]);"}
{"prompt": "The word \"hello!\" in a frame with a dashed border and rounded corners.", "code": "return Node('hello!', {\n  padding: 0.1, margin: 0.01, border: 1,\n  border_stroke_dasharray: 5, border_radius: 0.05\n});"}
{"prompt": "A whale emoji in a square box.", "code": "return Node('\ud83d\udc0b', {margin: 0.01});"}
{"prompt": "Three donut emojis in boxes with one stacked on top and two arrayed horizontally below.", "code": "let d = Node('\ud83c\udf69');\nlet h = HStack([d, d]);\nlet v = VStack([d, h]);\nreturn Frame(v, {margin: 0.01});"}
{"prompt": "A rectangle with aspect ratio 2 placed in the top right and rotated 20 degrees clockwise.", "code": "return Place(Rect(), {\n  pos: [0.6, 0.4], rad: [0.2, 0.1], rotate: 20, invar: true\n});"}
{"prompt": "A square.", "code": "return Frame(Rect(), {margin: 0.01});"}
{"prompt": "A circle.", "code": "return Frame(Circle(), {margin: 0.01});"}
{"prompt": "A small square missing its top edge.", "code": "return Polyline([\n    [0.3, 0.3], [0.3, 0.7], [0.7, 0.7], [0.7, 0.3]\n]);"}
{"prompt": "A gray line spiraling clockwise inward in a triangular path. The background is nearly black with rounded corners.", "code": "let spiral = SymPath({\n  fx: t => 0.43 + 0.5*exp(-0.05*t)*cos(t),\n  fy: t => 0.48 + 0.5*exp(-0.05*t)*sin(t),\n  tlim: [0, 1000], N: 500, stroke: '#BBB'\n});\nreturn Frame(spiral, {\n  padding: 0.05, border: 1, margin: 0.05,\n  border_radius: 0.02, border_fill: '#111'\n});"}
{"prompt": "A horizontal axis with 5 ticks labeled with emojis for: mount fuji, a rocket, a whale, a watermellon, and a donut.", "code": "let ticks = zip(linspace(0, 1, 5), ['\ud83d\uddfb', '\ud83d\ude80', '\ud83d\udc0b', '\ud83c\udf49', '\ud83c\udf69']);\nlet axis = HAxis(ticks, {tick_size: 0.5, tick_pos: 'both'});\nreturn Frame(axis, {aspect: 5, margin: [0.1, 1.3, 0.1, 0]});"}
{"prompt": "A series of closely spaced squares rotating clockwise along a sinusoidal path.", "code": "let sqr = x => Rotate(Square(), r2d*x, {invar: true});\nlet boxes = SymPoints({fy: sin, fs: sqr, size: 0.4, xlim: [0, 2*pi], N: 150});\nreturn Frame(Graph(boxes), {margin: 0.1});"}
{"prompt": "A plot of a sin function from 0 to 2\\*pi. The y-axis has ticks from -1 to 1. The x-axis has ticks from 0 to 2\\*pi labeled as fractions of pi and is anchored at y\\=0. There are light gray dashed grid lines aligned with the ticks.", "code": "let line = SymPath({fy: x => -sin(x), xlim: [0, 2*pi]});\nlet xticks = linspace(0, 2, 6).slice(1).map(x => [x*pi, `${rounder(x, 1)} \u03c0`]);\nlet plot = Plot(line, {\n  aspect: phi, xaxis_pos: 0, xticks, yticks: 5, grid: true,\n  xlabel: 'phase', ylabel: 'amplitude', title: 'Inverted Sine Wave',\n  xlabel_offset: 0.1, xaxis_tick_pos: 'both', grid_stroke_dasharray: 3\n});\nreturn Frame(plot, {margin: 0.25});"}
{"prompt": "A plot with three bars with black borders at \"A\", \"B\", and \"C\". The first bar is red and is the shortest, the second bar is blue and is the tallest, while the third bar is gray.", "code": "let abar = VBar(3, {fill: red, stroke: 'black'});\nlet bbar = VBar(8, {fill: blue, stroke: 'black'});\nlet bars = BarPlot([['A', abar], ['B', bbar], ['C', 6]], {\n  ylim: [0, 10], yticks: 6, title: 'Example BarPlot',\n  xlabel: 'Category', ylabel: 'Value', bar_fill: '#AAA'\n});\nreturn Frame(bars, {margin: 0.3});"}
{"prompt": "Two boxes with text in them that have black borders and gray interiors. The box in the upper left says \"hello\" and the box in the lower right says \"world!\".", "code": "let hello = Node('hello', {fill: '#EEE'});\nlet world = Node('world!', {fill: '#EEE'});\nreturn Scatter([[hello, [0.33, 0.3]], [world, [0.62, 0.7]]], {size: [0.25, 0.1]});"}
{"prompt": "A curved line going from the upper left to the lower right. The left side of the line has a red arrow facing left and the right side has a blue arrow facing right. Both arrows are triangular with black borders.", "code": "return Edge([0.2, 0.3], [0.8, 0.7], {\n  arrow_beg: true, arrow_end: true, arrow_base: true,\n  arrow_beg_fill: red, arrow_end_fill: blue,\n});"}
{"prompt": "A network with a node on the left saying \"hello world\" and two nodes on the right saying \"hello\" and \"world\". There are arrows going from the left node to each of the right nodes. The nodes have gray backgrounds and rounded corners.", "code": "return Network([\n  ['A', ['hello', 'world'], [0.25 , 0.5], 0.15],\n  ['B', 'hello', [0.8, 0.25]],\n  ['C', 'world', [0.7, 0.75]]\n], [\n  ['A', 'B'], ['A', 'C']\n], {\n  aspect: phi, directed: true,\n  node_fill: '#EEE', node_border_radius: 0.05\n});"}
{"prompt": "A horizontal axis with 4 ticks. On the top side, the ticks are labeled \"0\", \"i\", \"j\", and \"1\". On the bottom side, the middle two ticks are labeled in Latex with \"q\\_{i,1}\" and \"q\\_{i,2}\".", "code": "let ticks1 = zip([0, 0.35, 0.7, 1], [Tex('0'), Tex('i'), Tex('j'), Tex('1')]);\nlet ticks2 = zip([0.35, 0.7], [Tex('q_{i,1}'), Tex('q_{j,2}')]);\nlet axis1 = Axis('h', ticks1, {tick_size: 0.5, tick_pos: 'both'});\nlet axis2 = Axis('h', ticks2, {tick_size: 0.5, tick_pos: 'both', label_pos: 'out', label_offset: 0});\nreturn Frame(Group([axis1, axis2]), {aspect: 6, margin: [0.05, 1.3, 0.05, 1.3]});"}
{"prompt": "A plot of two lines that are shaded below. One line is a steep exponential in blue and the other line is a more shallow exponential in red. The x-axis has tick labels at \"1\" and \"B\" and the \"B\" tick has associated solid vertical grid line. The y-axis has a tick at \"0\". The x-axis has the lable \"Innovation Step Size $(\\gamma)$\" and the y-axis \"Density $(f_k)$\". There is a note in the top right of the figure indicating that the probability of exceeding \"B\" is 10% for the blue line and 60% for the red line.", "code": "let [\u03b1i, \u03b1r] = [8, 2]; let B = 1.3;\nlet xlim = [xlo, xhi] = [1, 2]; let ylim = [ylo, yhi] = [0, sqrt(\u03b1i)];\nlet [fi, fr] = [\u03b1i, \u03b1r].map(\u03b1 => (x => sqrt(\u03b1)*x**(-\u03b1-1)));\nlet si = SymFill({fy1: 0, fy2: fi, xlim, fill: blue, opacity: 0.4});\nlet sr = SymFill({fy1: 0, fy2: fr, xlim, fill: red, opacity: 0.4});\nlet [bi, br] = [fi, fr].map(f => SymPath({fy: f, xlim, stroke: '#333'}));\nlet bline = VLine(B, {lim: ylim, stroke_width: 2});\nlet bbox = SymFill({fy1: 0, fy2: yhi, xlim: [B, xhi], fill: '#EEE', stroke: 'none', opacity: 0.5});\nlet xticks = [[1, '1'], [B, 'B'], [2, '']];\nlet yticks = [[0, '0'], [sqrt(\u03b1i), '']];\nlet xlabel = HStack([Text('Innovation Step Size '), Tex('(\\\\gamma)')], {spacing: 0.02});\nlet ylabel = HStack([Text('Density '), Tex('(f_k)')], {spacing: 0.02});\nlet tnote = [\n  '\\\\mathbb{P}_i[\\\\gamma\\\\ge B] \\\\approx 10\\\\%',\n  '\\\\mathbb{P}_r[\\\\gamma\\\\ge B] \\\\approx 60\\\\%'\n]\nlet note = Place(VStack(tnote.map(Tex), {spacing: 0.5}), {pos: [1.7, 1.7], rad: [0.2, 0.1]});\nlet plot = Plot([bbox, si, sr, bi, br, bline, note], {\n  aspect: phi, yticks, xticks, grid: true, xlabel_offset: 0.13, ylabel_offset: 0.05, xlabel, ylabel\n});\nreturn Frame(plot, {margin: [0.15, 0.01, 0.01, 0.2]});"}
{"prompt": "Two horizontal lines connected at the left with a vertical line. The top line contains mostly blue circles and one red circle. The bottom line contains mostly red circles that are spaced more widely. There is a thin box on the top line labeled \"Low B\" and a wider box on the bottom line labeled \"High B\". At the bottom of the figure there is the text \"Productivity >>>\".", "code": "let [B1, B2] = [0.05, 0.2];\nlet [size, bsize] = [0.02, 0.1];\nlet [y1, y2] = [0.3, 0.7];\nlet [b1, b2] = [0.44, 0.65];\nlet p1 = [0.08, 0.17, b1, 0.52, 0.59];\nlet p2 = [0.2, 0.4, b2, 0.95];\nlet base = VLine(0);\nlet prods = [y1, y2].map(y => HLine(y, {stroke: 'black'}));\nlet steps1 = Scatter(p1.map(x => [x, y1]), {shape: Circle({fill: blue}), size});\nlet steps1a = Scatter([[0.36, y1]], {shape: Circle({fill: red}), size: 0.02});\nlet steps2 = Scatter(p2.map(x => [x, y2]), {shape: Circle({fill: red}), size});\nlet cross = Group([Circle({fill: blue}), Ray(45), Ray(-45)], {aspect: 1, opacity: 0.6})\nlet fail = Place(cross, {pos: [0.72, y2], rad: size});\nlet pat1 = Rect({rect: [b1, y1-bsize, b1+B1, y1+bsize], fill: '#DDD', opacity: 0.75});\nlet pat2 = Rect({rect: [b2, y2-bsize, b2+B2, y2+bsize], fill: '#DDD', opacity: 0.75});\nlet label1 = Note('\"Low B\"', {pos: [0.47, y1-0.15], rad: 0.06});\nlet label2 = Note('\"High B\"', {pos: [0.753, y2-0.15], rad: 0.06});\nlet xlabel = Note('Productivity >>>', {pos: [0.5, 1], rad: 0.1});\nlet group = Group([\n  base, ...prods, pat1, pat2, steps1, steps2, steps1a, fail, label1, label2, xlabel\n], {aspect: 1.3});\nreturn Frame(group, {margin: 0.05});"}
{"prompt": "A horizontal axis arrows on either end and ticks at \"q/\\gamma\", \"Bq/\\gamma\", \"q\", \"Bq\", and \"\\gamma^{\\prime}q$ labeled at the bottom. On the top, \"q/\\gamma\" is labeled with \"Prev\", \"q\" is labeled with \"Current\", and \"\\gamma^{\\prime}q\" is labeled with \"Next\". There is a semi-transparent box ranging from \"Bq/\\gamma\" to \"Bq\" labeled with \"Lagging\" on the top left, \"Leading\" on the top right, and \"Patent Coverage\" across the bottom.", "code": "let ticks = [\n  [0.1, Tex('q/\\\\gamma')], [0.3, Tex('B q/\\\\gamma')], [0.5, Tex('q')],\n  [0.7, Tex('B q')], [0.9, Tex('\\\\gamma^{\\\\prime} q')]\n];\nlet main = HAxis(ticks, {tick_pos: 'both', label_pos: 'top', tick_size: 0.07});\nlet tops = [[0.1, 'Prev'], [0.3, ''], [0.5, 'Current'], [0.7, ''], [0.9, 'Next']];\nlet top = HAxis(tops, {tick_size: 0.05});\nlet vline = VLine(0.5, {opacity: 0.25, stroke_dasharray: 4});\nlet shade = Rect({rect: [0.3, 0, 0.7, 1], stroke: 'black', fill: '#BBB', opacity: 0.15});\nlet lag = Place(Text('Lagging', {stroke: '#444'}), {pos: [0.4, 0.15], rad: 0.08});\nlet led = Place(Text('Leading', {stroke: '#444'}), {pos: [0.6, 0.15], rad: 0.08});\nlet pat = Place(Text('Patent Coverage', {stroke: '#444'}), {pos: [0.5, 0.9], rad: 0.18});\nlet arrowl = Arrowhead(180, {pos: [0, 0.5], rad: [0.02, 0.04]});\nlet arrowr = Arrowhead(0, {pos: [1, 0.5], rad: [0.02, 0.04]});\nlet group = Group([vline, shade, main, top, lag, led, pat, arrowl, arrowr], {aspect: 3});\nreturn Frame(group, {margin: 0.05});"}
{"prompt": "A plot with only an x-axis with ticks, dashed grid lines, and labels at \"q/\\gamma\", \"Bq/\\gamma\", \"q\", \"Bq\", and \"\\gamma^{\\prime}q\". There is a steep exponential decay starting at \"q\" in blue on the top side of the axis and a shallow exponential decay starting at \"q\" on the bottom side in red. There is a semi-transparent box between \"Bq/\\gamma\" and \"Bq\".", "code": "let [\u03b1i, \u03b1r] = [8, 2]; let B = 1.3;\nlet xlim = [xlo, xhi] = [-0.025, 1.025];\nlet xlim1 = [0.4, 1];\nlet [fi, fr] = [\u03b1i, \u03b1r].map(\u03b1 => (x => sqrt(\u03b1)*x**(-\u03b1-1)));\nlet fi1 = x => 0.5-0.02*fi(1+x-0.6);\nlet fr1 = x => 0.5+0.07*fr(1+x-0.6);\nlet si = SymFill({fy2: 0.5, fy1: fi1, xlim: xlim1, fill: '#1e88e5', opacity: 0.5});\nlet sr = SymFill({fy2: 0.5, fy1: fr1, xlim: xlim1, fill: '#ff0d57', opacity: 0.5});\nlet ticks = [\n  [0.1, Tex('q/\\\\gamma')], [0.25, Tex('B q/\\\\gamma')], [0.4, Tex('q')],\n  [0.6, Tex('B q')], [0.8, Tex('\\\\gamma^{\\\\prime} q')]\n];\nlet main = HAxis(ticks, {\n  tick_pos: 'both', label_pos: 'top', tick_size: 0.035, label_offset: 10, lim: xlim,\n});\nlet pat = Place(Text('Patent', {stroke: '#444'}), {pos: [0.52, 0.07], rad: 0.08});\nlet vlines = [0.1, 0.4, 0.8].map(x => VLine(x, {opacity: 0.25, stroke_dasharray: 4}));\nlet shade = Rect({\n  rect: [0.25, 0, 0.6, 1], stroke: 'black', fill: '#BBB', opacity: 0.15\n});\nlet arrowl = Arrowhead(180, {pos: [xlo, 0.5], rad: [0.02, 0.03]});\nlet arrowr = Arrowhead(0, {pos: [xhi, 0.5], rad: [0.02, 0.03]});\nlet group = Group([...vlines, shade, main, arrowl, arrowr, si, sr, pat], {aspect: 2});\nreturn Frame(group, {margin: [0.06, 0.03]});"}
{"prompt": "A plot with an exponentially decaying line. It is divided horizontally at a point \"R\" with a dashed line. To the left of \"R\" it is shaded dark gray and labeled \"Research\", and to the right of \"R\" it is shaded light gray and labeled \"Production\". There are also x-axis ticks a \"0\" and \"1\" and y-axis ticks at \"0\". The x-axis is labeled \"Worker Index $(i)$\" and the y-axis is labeled \"Research Aptitude ($a_i$). The graph is titled \"Research Aptitude Distribution\".", "code": "let [\u03b2, R] = [0.5, 0.2];\nlet xlim = [xlo, xhi] = [0.0001, 1];\nlet ylim = [ylo, yhi] = [0, 5];\nlet f = x => min(yhi, (1-\u03b2)*x**(-\u03b2));\nlet sr = SymFill({fy1: 0, fy2: f, xlim: [xlo, R], fill: '#555', opacity: 0.4, N: 250});\nlet sp = SymFill({fy1: 0, fy2: f, xlim: [R, xhi], fill: '#BBB', opacity: 0.4, N: 250});\nlet b = SymPath({fy: f, xlim, stroke: '#333', N: 250});\nlet bline = VLine(R, {lim: ylim, stroke_dasharray: 3});\nlet xticks = [[0, '0'], [1, '1'], [R, 'R'], [2, '']];\nlet xlabel = HStack([Text('Worker Index '), Tex('(i)')]);\nlet ylabel = HStack([Text('Research Aptitude '), Tex('(a_i)')]);\nlet rnote = Note('Research', {pos: [0.1, 0.7], rad: 0.08});\nlet pnote = Note('Production', {pos: [0.5, 0.3], rad: 0.1});\nlet plot = Plot([sr, sp, b, bline, rnote, pnote], {\n  aspect: 1.5, yticks: [0], xticks, xlabel_offset: 0.13,\n  ylabel_offset: 0.05, xlabel, ylabel, ylim, title: 'Research Aptitude Distribution'\n});\nreturn Frame(plot, {margin: 0.2});"}
{"prompt": "A plot with three lines: a horizontal line at height $\\frac{\\eta}{\\alpha\\rho}$ labeled \"SMB\", a decresing line starting at the same point labeled \"PMB\\*\", and an increasing line starting at \"1\" labeled \"SMC\\=PMC\\*\". The intersections of these lines are market with grid lines and are labeled \"Equil\" and \"Efficient\". The x-axis ranges from \"0\" to \"1\" and is labeled \"Researcher Share (R)\".", "code": "let [alpha, eta, rho] = [1, 0.1, 0.05];\nlet [rstar, rhat] = [0.25, 0.5];\nlet smb0 = eta/(alpha*rho);\nlet xlim = [0, 1]; let N = 500;\nlet mc = r => 1/(1-r);\nlet smb = r => smb0;\nlet pmb = r => (eta/alpha)/(rho+eta*r);\nlet line_mc = SymPath({fy: mc, xlim: [0, 0.75], N});\nlet line_smb = SymPath({fy: smb, xlim: [0, 1], N});\nlet line_pmb = SymPath({fy: pmb, xlim: [0, 1], N});\nlet note_mc = Note('SMC=PMC*', {pos: [0.758, 4.23], rad: 0.07});\nlet note_smb = Note('SMB', {pos: [1.055, 2.02], rad: 0.03});\nlet note_pmb = Note('PMB*', {pos: [1.06, 0.68], rad: 0.035});\nlet dots = Scatter([[rstar, 1.34], [rhat, 2]], {size: 0.008});\nlet label_smb = Tex('\\\\frac{\\\\eta}{\\\\alpha\\\\rho}');\nlet xticks = [[0, '0'], [rstar, 'Equil'], [rhat, 'Efficient'], [1, '1']];\nlet yticks = [[0, '0'], [1, '1'], [smb0, label_smb], [4, '']];\nlet plot = Plot([line_mc, line_smb, line_pmb, note_mc, note_smb, note_pmb, dots], {\n  aspect: phi, xlim: [0, 1], ylim: [0, 4], xticks, yticks, grid: true,\n  grid_opacity: 0.15, xlabel: 'Researcher Share (R)'\n});\nreturn Frame(plot, {margin: [0.15, 0.1, 0.15, 0.25]});"}
{"prompt": "Two by two table with columns \"Product and \"\u00ac Product\" and rows \"Patent\" and \"\u00ac Patent\". The cell values in the table are \"Protected Innovation\" and \"Strategic Patents\" in the first row and \"Secrecy\" and \"Incation\" in the second row. The column labels are in blue and the row labels are in red.", "code": "function make_node(t, c, b, s) {\n  let text = VStack(t.map(s => Text(s, {stroke: c})), {expand: false});\n  let place = Place(text, {rad: [0.4, s*t.length]});\n  return Frame(place, {border: b});\n}\nlet [b, c] = [['Product'], ['\u00ac Product']].map(s => make_node(s, blue, 0, 0.17));\nlet [d, g] = [['Patent'], ['\u00ac Patent']].map(s => make_node(s, red, 0, 0.12));\nlet [e, f, h, i] = [['Protected', 'Innovation'], ['Strategic', 'Patents'], ['Secrecy'], ['Inaction']].map(\n  s => make_node(s, 'black', 1, 0.12)\n);\nlet grid1 = VStack([\n  [HStack([[Spacer(), 0.25], b, c]), 0.25],\n  [HStack([[d, 0.25], e, f]), 0.75/2],\n  [HStack([[g, 0.25], h, i]), 0.75/2],\n]);\nreturn Frame(grid1, {aspect: phi, margin: 0.05});"}
{"prompt": "A plot of two lines: one blue one labeled \"No Stretegic Patents\" and one red one labeled \"Strategic Patents\". The x-axis is labeled \"Firm Productivity\" and the y-axis is labeled \"Complementarity\".", "code": "let xlim = [1, 2]; let ylim = [0, 1];\nlet line1 = SymPath({fy: x => 0.5/x**2, xlim, stroke: '#ff0d57', stroke_width: 2});\nlet line2 = SymPath({fy: x => 1 - 0.5*1/x**2, xlim, stroke: '#1e88e5', stroke_width: 2});\nlet note1 = Place(\n  Node(['No Strategic', 'Patents'], {border: 0}), {pos: [1.3, 0.84], rad: 0.14}\n);\nlet note2 = Place(\n  Node(['Strategic', 'Patents'], {border: 0}), {pos: [1.3, 0.16], rad: 0.11}\n);\nlet dot = Place(Dot(), {pos: [1, 0.5], rad: 0.01});\nlet plot = Plot([line1, line2, note1, note2, dot], {\n  xlim, ylim, aspect: 1.2, xticks: [], yticks: [],\n  xlabel: 'Firm Productivity', ylabel: 'Complementarity',\n  xlabel_offset: 0.07, ylabel_offset: 0.07,\n});\nlet frame = Frame(plot, {margin: [0.2, 0.05, 0.1, 0.15]});\nreturn frame;"}
{"prompt": "Four wide nodes with the words \"scented\", \"large\", and \"liquid\" (in blue), and \"OxiClean\". There are arrows down to four more nodes with the same words but \"liquid\" is changed to \"pods\" (in red). The arrow for the changed node is filled in. Below that there is a horizontal line, then an array of numbers \"0\", \"0\", \"1\" (in red), and \"0\". Below that is a filled in arrow pointing to the text \"25% novelty\".", "code": "let cells1 = [['scented'], ['large'], ['liquid', {text_stroke: 'blue'}], ['OxiClean']];\nlet cells2 = [['scented'], ['large'], ['pods', {text_stroke: 'red'}], ['OxiClean']];\nlet aprops = [{}, {}, {arrow_fill: '#CCC', arrow_base: true}, {}]\nlet vals = [[0], [0], [1, {stroke: 'red'}], [0]];\nlet row1 = HStack(cells1.map(([s, a]) => Node(s, {aspect: 3, padding: 0.2, ...a})));\nlet row2 = HStack(cells2.map(([s, a]) => Node(s, {aspect: 3, padding: 0.2, ...a})));\nlet arrow1 = HStack(aprops.map(a =>\n  Edge([0.5, 0], [0.5, 1], {arrow: true, arrow_size: [0.1, 0.08], ...a})\n));\nlet arrow2 = Edge([0.5, 0], [0.5, 1], {\n  arrow: true, arrow_size: [0.03, 0.15], arrow_fill: '#CCC', arrow_base: true\n});\nlet nums = HStack(vals.map(([s, a]) =>\n  Node(`${s}`, {flex: true, padding: 0, border: 0, ...a})\n));\nlet line = HLine(0.5);\nlet result = Node('25% novelty', {flex: true, border: 0});\nlet rows = VStack([\n  [row1, 0.1], [arrow1, 0.25], [row2, 0.1], [line, 0.15],\n  [nums, 0.1], [Spacer(), 0.03], [arrow2, 0.15], [Spacer(), 0.03],\n  [result, 0.1]\n]);\nlet nn = (s, a) => Node(s, {flex: true, border: 0, ...a});\nreturn Frame(rows, {margin: 0.05});"}
{"prompt": "Three rows of nodes connected by lines. The first row has three nodes for product categories 1, 2, and 3. The second row has three nodes for Wikipedia text 1, 2, and 3. And the third row has five notes for patent abstract 1 through 5. The first two rows are connected by bi-directional filled in arrows. The second and third rows are partially connected by curved lines.", "code": "let locs = range(5).map(i => 0.2*i+0.1);\nlet cells1 = [null, ...range(1, 4).map(i => ['Product', `Category ${i}`]), null];\nlet cells2 = [null, ...range(1, 4).map(i => ['Wikipedia', `Text ${i}`]), null];\nlet cells3 = range(1, 6).map(i => ['Patent', `Abstract ${i}`]);\nlet noder = s => (s == null) ? Spacer() : Node(s, {\n  aspect: 3, padding: 0.2, flex: true, border_radius: 0.05\n});\nlet [row1, row2, row3] = [cells1, cells2, cells3].map(\n  c => HStack(c.map(noder), {spacing: 0.02})\n);\nlet bidi = Edge([0.5, 0], [0.5, 1], {\n  arrow_beg: true, arrow_end: true, arrow_size: [0.1, 0.075], arrow_fill: '#DDD', arrow_base: true\n});\nlet edges1 = HStack([Spacer(), bidi, bidi, bidi, Spacer()]);\nlet elocs2 = [[0, 1], [1, 1], [2, 3], [3, 2], [4, 3]].map(\n  ([x1, x2]) => [[locs[x1], 1], [locs[x2], 0]]\n);\nlet edges2 = Group(elocs2.map(([p1, p2]) => Edge(p1, p2)));\nlet rows = VStack([row1, edges1, row2, edges2, row3], {aspect: phi});\nreturn Frame(rows, {margin: 0.05});\n"}
